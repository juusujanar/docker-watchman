name: Build Golang containers

on:
  push:
    branches: master

env:
  WATCHMAN_VERSION: "v2021.02.01.00"

jobs:
  golang1_14-alpine:
    name: Golang 1.14 on Alpine
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Golang 1.14 on Alpine 3.11
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./golang/1.14/alpine3.11/Dockerfile
          # Will be enabled once Dockerfile configured to build from sources
          # platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: |
            janarj/watchman:golang1.14-alpine3.11-${{ env.WATCHMAN_VERSION }}
            janarj/watchman:golang1.14-alpine3.11
          build-args: |
            WATCHMAN_VERSION=${{ env.WATCHMAN_VERSION }}

      - name: Build and push Golang 1.14 on Alpine 3.12
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./golang/1.14/alpine3.12/Dockerfile
          # Will be enabled once Dockerfile configured to build from sources
          # platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: |
            janarj/watchman:golang1.14-alpine3.12-${{ env.WATCHMAN_VERSION }}
            janarj/watchman:golang1.14-alpine3.12
          build-args: |
            WATCHMAN_VERSION=${{ env.WATCHMAN_VERSION }}

      - name: Build and push Golang 1.14 on Alpine 3.13
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./golang/1.14/alpine3.13/Dockerfile
          # Will be enabled once Dockerfile configured to build from sources
          # platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: |
            janarj/watchman:golang1.14-alpine3.13-${{ env.WATCHMAN_VERSION }}
            janarj/watchman:golang1.14-alpine3.13
            janarj/watchman:golang1.14-alpine
          build-args: |
            WATCHMAN_VERSION=${{ env.WATCHMAN_VERSION }}


  golang1_14-debian:
    name: Golang 1.14 on Debian
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Build and push Golang 1.14 on Debian Buster
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./golang/1.14/buster/Dockerfile
          # Will be enabled once Dockerfile configured to build from sources
          # platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: |
            janarj/watchman:golang1.14-buster-${{ env.WATCHMAN_VERSION }}
            janarj/watchman:golang1.14-buster
            janarj/watchman:golang1.14
          build-args: |
            WATCHMAN_VERSION=${{ env.WATCHMAN_VERSION }}


      - name: Build and push Golang 1.14 on Debian Stretch
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./golang/1.14/stretch/Dockerfile
          # Will be enabled once Dockerfile configured to build from sources
          # platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: |
            janarj/watchman:golang1.14-stretch-${{ env.WATCHMAN_VERSION }}
            janarj/watchman:golang1.14-stretch
          build-args: |
            WATCHMAN_VERSION=${{ env.WATCHMAN_VERSION }}




  golang1_15-alpine:
    name: Golang 1.15 on Alpine
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Golang 1.15 on Alpine 3.12
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./golang/1.15/alpine3.12/Dockerfile
          # Will be enabled once Dockerfile configured to build from sources
          # platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: |
            janarj/watchman:golang1.15-alpine3.12-${{ env.WATCHMAN_VERSION }}
            janarj/watchman:golang1.15-alpine3.12
          build-args: |
            WATCHMAN_VERSION=${{ env.WATCHMAN_VERSION }}

      - name: Build and push Golang 1.15 on Alpine 3.13
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./golang/1.15/alpine3.13/Dockerfile
          # Will be enabled once Dockerfile configured to build from sources
          # platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: |
            janarj/watchman:golang1.15-alpine3.13-${{ env.WATCHMAN_VERSION }}
            janarj/watchman:golang1.15-alpine3.13
            janarj/watchman:golang1.15-alpine
          build-args: |
            WATCHMAN_VERSION=${{ env.WATCHMAN_VERSION }}




  golang1_15-debian:
    name: Golang 1.15 on Debian
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Golang 1.15 on Debian Buster
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./golang/1.15/buster/Dockerfile
          # Will be enabled once Dockerfile configured to build from sources
          # platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          tags: |
            janarj/watchman:golang1.15-buster-${{ env.WATCHMAN_VERSION }}
            janarj/watchman:golang1.15-buster
            janarj/watchman:golang1.15
            janarj/watchman:golang
          build-args: |
            WATCHMAN_VERSION=${{ env.WATCHMAN_VERSION }}